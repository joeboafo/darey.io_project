## WEB STACK IMPLEMENTATION (LEMP STACK)

## Step 0 – Preparing prerequisites
In order to complete this project you will need an AWS account and a virtual server with Ubuntu Server OS.

<img width="545" alt="Screenshot 2023-07-30 212439" src="https://github.com/joeboafo/darey.io_project/assets/135559039/83f525fb-c5fe-4f3a-857f-f52039e07198">
<img width="530" alt="Screenshot 2023-07-30 212609" src="https://github.com/joeboafo/darey.io_project/assets/135559039/03708e0a-be7e-4fc2-abf7-9c73082f6d72">
<img width="237" alt="Screenshot 2023-07-30 212714" src="https://github.com/joeboafo/darey.io_project/assets/135559039/73b087db-ea54-4460-ac80-3064ce3d96cd">

If you do not have an AWS account – go back to Project 1 Step 0 to sign in to AWS free tier account and create a new EC2 Instance of t2.micro family with Ubuntu Server 22.04 LTS (HVM) image. Remember, you can have multiple EC2 instances, but make sure you STOP the ones you are not working with at the moment to save available free hours.

Hint: In previous project we used Putty on Windows to connect to our EC2 Instance, but there is a simpler way that do not require conversion of .pem key to .ppk – using Git Bash.

Download and install Git Bash like it is shown in this video.

Launch Git Bash and run following command:

<img width="562" alt="Screenshot 2023-07-30 214133" src="https://github.com/joeboafo/darey.io_project/assets/135559039/3d41f849-8d5a-4e30-b4d4-c2277c3d4c1c">

<img width="616" alt="Screenshot 2023-07-30 214427" src="https://github.com/joeboafo/darey.io_project/assets/135559039/7f61711c-3ea9-4399-a35d-46b8be63574f">

## STEP 1 – INSTALLING THE NGINX WEB SERVER
Step 1 – Installing the Nginx Web Server
In order to display web pages to our site visitors, we are going to employ Nginx, a high-performance web server. We’ll use the apt package manager to install this package.

Since this is our first time using apt for this session, start off by updating your server’s package index. Following that, you can use apt install to get Nginx installed:

sudo apt update -y

<img width="956" alt="Screenshot 2023-07-30 215526" src="https://github.com/joeboafo/darey.io_project/assets/135559039/cadb60ce-d4c9-4e2f-8831-9e259c2d5b4f">


sudo apt install nginx

<img width="420" alt="Screenshot_20230131_103238" src="https://github.com/joeboafo/darey.io_project/assets/135559039/831116ff-7ec5-4885-ba3d-f1e2233b0c22">

sudo systemctl status nginx

<img width="890" alt="Screenshot 2023-07-30 224107" src="https://github.com/joeboafo/darey.io_project/assets/135559039/4ff70b6f-1828-4b79-9d17-c13e5ecf3378">

If it is green and running, then you did everything correctly – you have just launched your first Web Server in the Clouds!

Before we can receive any traffic by our Web Server, we need to open TCP port 80 which is default port that web browsers use to access web pages in the Internet.

As we know, we have TCP port 22 open by default on our EC2 machine to access it via SSH, so we need to add a rule to EC2 configuration to open inbound connection through port 80:
Our server is running and we can access it locally and from the Internet (Source 0.0.0.0/0 means ‘from any IP address’).

First, let us try to check how we can access it locally in our Ubuntu shell, run:

<img width="542" alt="Screenshot 2023-07-30 224634" src="https://github.com/joeboafo/darey.io_project/assets/135559039/08092c23-faab-4692-ba08-ee4ff4506d70">

##STEP 2 — INSTALLING MYSQL
Now that you have a web server up and running, you need to install a Database Management System (DBMS) to be able to store and manage data for your site in a relational database. MySQL is a popular relational database management system used within PHP environments, so we will use it in our project.

Again, use ‘apt’ to acquire and install this software:


